[{"C:\\Users\\isacj\\Desktop\\Typster\\Typester\\src\\index.js":"1","C:\\Users\\isacj\\Desktop\\Typster\\Typester\\src\\App.js":"2","C:\\Users\\isacj\\Desktop\\Typster\\Typester\\src\\util\\API.js":"3","C:\\Users\\isacj\\Desktop\\Typster\\Typester\\src\\components\\BookCard\\index.js":"4","C:\\Users\\isacj\\Desktop\\Typster\\Typester\\src\\components\\Header\\index.js":"5"},{"size":322,"mtime":1607663130058,"results":"6","hashOfConfig":"7"},{"size":3195,"mtime":1607663719540,"results":"8","hashOfConfig":"7"},{"size":357,"mtime":1607663130062,"results":"9","hashOfConfig":"7"},{"size":501,"mtime":1607663130050,"results":"10","hashOfConfig":"7"},{"size":1226,"mtime":1607663130052,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1djppmf",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\isacj\\Desktop\\Typster\\Typester\\src\\index.js",[],["25","26"],"C:\\Users\\isacj\\Desktop\\Typster\\Typester\\src\\App.js",["27"],"import { useEffect, useState } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\n// import for Login\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport BookCard from \"./components/BookCard\";\r\n\r\nimport API from \"./util/API\";\r\n\r\nimport \"./App.css\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n// function LoginModalState() {\r\n//   const tempState;\r\n\r\n//   const [modalstate, setModalState] = useState(false);\r\n// }\r\n\r\nfunction App() {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    if (!searchQuery) return;\r\n    const handle = setTimeout(async () => {\r\n      const res = await API.Book.search(searchQuery);\r\n      setSearchResults(() =>\r\n        res.data.items.map(\r\n          ({\r\n            volumeInfo: {\r\n              title,\r\n              description,\r\n              authors,\r\n              imageLinks: { thumbnail: image },\r\n              infoLink: link,\r\n            },\r\n            id: bookId,\r\n          }) => ({ title, description, authors, image, link, bookId })\r\n        )\r\n      );\r\n    }, 500);\r\n    return () => clearTimeout(handle);\r\n  }, [searchQuery]);\r\n  console.log(searchResults);\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Button variant=\"light\" onClick={handleShow} className=\"button\">\r\n          Login or Signup\r\n        </Button>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Login</Modal.Title>\r\n          </Modal.Header>\r\n          <form>\r\n            <label>\r\n              Email:\r\n              <input type=\"text\" name=\"email\" id=\"email\" />\r\n            </label>\r\n            <label>\r\n              Password:\r\n              <input type=\"text\" name=\"password\" />\r\n            </label>\r\n          </form>\r\n          <Modal.Footer>\r\n            <a href=\"#\" id=\"signupLink\">\r\n              Not a member yet? Click here to get started.\r\n            </a>\r\n            <Button variant=\"light\" onClick={handleClose}>\r\n              Login\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Header>\r\n      <div className=\"container mt-5\">\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <div className=\"card mx-5\">\r\n              <div className=\"card-body\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={searchQuery}\r\n                  onChange={(e) => setSearchQuery(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            {searchResults.map(({ id, bookId, ...bookInfo }, i) => (\r\n              <BookCard\r\n                key={i}\r\n                id={id ?? bookId}\r\n                {...bookInfo}\r\n                saved={Boolean(id)}\r\n              />\r\n            ))}\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <Redirect to=\"/\" />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\isacj\\Desktop\\Typster\\Typester\\src\\util\\API.js",[],"C:\\Users\\isacj\\Desktop\\Typster\\Typester\\src\\components\\BookCard\\index.js",[],"C:\\Users\\isacj\\Desktop\\Typster\\Typester\\src\\components\\Header\\index.js",[],["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":71,"column":13,"nodeType":"36","endLine":71,"endColumn":41},{"ruleId":"30","replacedBy":"37"},{"ruleId":"32","replacedBy":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["39"],["40"],"no-global-assign","no-unsafe-negation"]