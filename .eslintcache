<<<<<<< HEAD
[{"C:\\Users\\Clyde\\Desktop\\github\\Typester\\src\\index.js":"1","C:\\Users\\Clyde\\Desktop\\github\\Typester\\src\\App.js":"2","C:\\Users\\Clyde\\Desktop\\github\\Typester\\src\\util\\API.js":"3","C:\\Users\\Clyde\\Desktop\\github\\Typester\\src\\components\\BookCard\\index.js":"4","C:\\Users\\Clyde\\Desktop\\github\\Typester\\src\\components\\Header\\index.js":"5","C:\\Users\\Clyde\\Desktop\\github\\Typester\\src\\components\\Chart\\index.js":"6"},{"size":291,"mtime":1607488960560,"results":"7","hashOfConfig":"8"},{"size":3662,"mtime":1607896796563,"results":"9","hashOfConfig":"8"},{"size":267,"mtime":1607488883647,"results":"10","hashOfConfig":"8"},{"size":414,"mtime":1607488960559,"results":"11","hashOfConfig":"8"},{"size":963,"mtime":1607489875535,"results":"12","hashOfConfig":"8"},{"size":630,"mtime":1607837356436,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"d9uslb",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"C:\\Users\\Clyde\\Desktop\\github\\Typester\\src\\index.js",[],["28","29"],"C:\\Users\\Clyde\\Desktop\\github\\Typester\\src\\App.js",["30","31","32"],"C:\\Users\\Clyde\\Desktop\\github\\Typester\\src\\util\\API.js",[],"C:\\Users\\Clyde\\Desktop\\github\\Typester\\src\\components\\BookCard\\index.js",[],"C:\\Users\\Clyde\\Desktop\\github\\Typester\\src\\components\\Header\\index.js",[],"C:\\Users\\Clyde\\Desktop\\github\\Typester\\src\\components\\Chart\\index.js",["33"],"import React from \"react\";\nimport {Line} from 'react-chartjs-2';\n\n\nfunction Chart(props) {\n  console.log(props.data.chartData);\n  return (\n      <div className=\"chart\">\n        {props.data.chartData!=undefined?(\n        <Line\n          data={props.data.chartData}\n          width={100}\n          height={50}\n          options={{\n            title:{\n              display: true,\n              text: \"Words per Minute History\",\n              fontSize: 25\n            },\n            maintainAspectRatio: true\n          }}\n        />\n        ):(<div>No results to display</div>)}\n      </div>\n    );\n  };\n  \n  export default Chart;\n  ",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":2,"column":35,"nodeType":"40","messageId":"41","endLine":2,"endColumn":42},{"ruleId":"38","severity":1,"message":"42","line":4,"column":8,"nodeType":"40","messageId":"41","endLine":4,"endColumn":12},{"ruleId":"43","severity":1,"message":"44","line":95,"column":13,"nodeType":"45","endLine":95,"endColumn":41},{"ruleId":"46","severity":1,"message":"47","line":9,"column":30,"nodeType":"48","messageId":"49","endLine":9,"endColumn":32},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]
=======
[{"D:\\Code\\bootcamp-homework\\Typester\\src\\index.js":"1","D:\\Code\\bootcamp-homework\\Typester\\src\\App.js":"2","D:\\Code\\bootcamp-homework\\Typester\\src\\util\\API.js":"3","D:\\Code\\bootcamp-homework\\Typester\\src\\components\\BookCard\\index.js":"4","D:\\Code\\bootcamp-homework\\Typester\\src\\components\\Header\\index.js":"5"},{"size":308,"mtime":1607659264600,"results":"6","hashOfConfig":"7"},{"size":3933,"mtime":1607659264624,"results":"8","hashOfConfig":"7"},{"size":338,"mtime":1607659264585,"results":"9","hashOfConfig":"7"},{"size":485,"mtime":1607659264605,"results":"10","hashOfConfig":"7"},{"size":1189,"mtime":1607659264588,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ljrg5n",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"D:\\Code\\bootcamp-homework\\Typester\\src\\index.js",[],["25","26"],"D:\\Code\\bootcamp-homework\\Typester\\src\\App.js",["27","28","29"],"import { useState, useEffect } from \"react\";\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\n// import for Login\nimport Form from \"react-bootstrap/Form\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport Header from \"./components/Header\";\nimport BookCard from \"./components/BookCard\";\n\nimport API from \"./util/API\";\n\nimport \"./App.css\";\nimport { Button } from \"react-bootstrap\";\n\n// function LoginModalState() {\n//   const tempState;\n\n//   const [modalstate, setModalState] = useState(false);\n// }\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    const handle = setTimeout(async () => {\n      const res = await API.Book.search(searchQuery);\n      setSearchResults(() =>\n        res.data.items.map(\n          ({\n            volumeInfo: {\n              title,\n              description,\n              authors,\n              imageLinks: { thumbnail: image },\n              infoLink: link,\n            },\n            id: bookId,\n          }) => ({ title, description, authors, image, link, bookId })\n        )\n      );\n    }, 500);\n    return () => clearTimeout(handle);\n  }, [searchQuery]);\n  console.log(searchResults);\n  return (\n    <>\n      <Header>\n        <Button variant=\"light\" onClick={handleShow} className=\"button\">\n          Login/Signup\n        </Button>\n\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Login</Modal.Title>\n          </Modal.Header>\n          <form>\n            <label>\n              Email:\n              <input type=\"text\" name=\"name\" id=\"email\" />\n            </label>\n            <label>\n              Password:\n              <input type=\"text\" name=\"name\" />\n            </label>\n          </form>\n          <Modal.Footer>\n            <a href=\"#\" id=\"signupLink\">\n              Not a member yet? Click here to get started.\n            </a>\n            <Button variant=\"light\" onClick={handleClose}>\n              Login\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </Header>\n      <div className=\"container mt-5\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <div className=\"card mx-5\">\n              <div className=\"card-body\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                />\n              </div>\n            </div>\n            {searchResults.map(({ id, bookId, ...bookInfo }, i) => (\n              <BookCard\n                key={i}\n                id={id ?? bookId}\n                {...bookInfo}\n                saved={Boolean(id)}\n              />\n            ))}\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","D:\\Code\\bootcamp-homework\\Typester\\src\\util\\API.js",[],"D:\\Code\\bootcamp-homework\\Typester\\src\\components\\BookCard\\index.js",[],["30","31"],"D:\\Code\\bootcamp-homework\\Typester\\src\\components\\Header\\index.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":2,"column":35,"nodeType":"38","messageId":"39","endLine":2,"endColumn":42},{"ruleId":"36","severity":1,"message":"40","line":4,"column":8,"nodeType":"38","messageId":"39","endLine":4,"endColumn":12},{"ruleId":"41","severity":1,"message":"42","line":73,"column":13,"nodeType":"43","endLine":73,"endColumn":41},{"ruleId":"32","replacedBy":"44"},{"ruleId":"34","replacedBy":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["46"],["47"],"no-global-assign","no-unsafe-negation"]

>>>>>>> 7259ea0e19ac8301fbe7e29e6314099e6ba3d654
